'use strict';

process.env.BABEL_ENV = 'development';
process.env.NODE_ENV = 'development';

process.on('unhandledRejection', (err) => {
  throw err;
});

require('../config/env');

const fs = require('fs-extra');
const webpack = require('webpack');
const WebpackDevServer = require('webpack-dev-server');
const configFactory = require('../config/webpack.config');
const createDevServerConfig = require('../config/webpackDevServer.config');
const paths = require('../config/paths');

const PORT = parseInt(process.env.PORT, 10) || 3000;
const HOST = process.env.HOST || '0.0.0.0';

const config = configFactory('development');

// Remove all content but keep the directory so that
// if you're in it, you don't end up in Trash
fs.emptyDirSync(paths.appTemp);

const compiler = webpack(config);
// const proxySetting = require(paths.appPackageJson).proxy;
// const proxyConfig = prepareProxy(
//   proxySetting,
//   paths.appPublic,
//   paths.publicUrlOrPath
// );
// Serve webpack assets generated by the compiler over a web server.
const serverConfig = createDevServerConfig(
    // proxyConfig,
    // urls.lanUrlForConfig
);
const devServer = new WebpackDevServer(compiler, serverConfig);

// Launch WebpackDevServer.
// devServer.listen(PORT, HOST, err => {
//   if (err) {
//     return console.log(err);
//   }
// });
